[gd_scene load_steps=5 format=3 uid="uid://bx1wovv0p182j"]

[ext_resource type="Resource" uid="uid://b678kjxq1cp1t" path="res://map/map_resource.tres" id="2_xlpbv"]

[sub_resource type="GDScript" id="GDScript_72uu4"]
script/source = "extends Control

@export var map_data : map_resource

@export_file('*.tscn') var battle_path: String
@export_file('*.tscn') var campfire_path: String

'''
@onready var start_button := %battle1
@onready var battle_button := %battle2
@onready var campfire_button := %campfire
@onready var boss_button := %boss
'''
# initializing node variables, any additional nodes will need to be added here
# eventually will need to do this in an _init func with a loop.
# the null value gets replaced with reference to the node, the first value is that nodes index in completion
'''
var battle1 =    [\"battle1\",[0, null]]
var battle2 =    [\"battle2\",[1, null]]
var campfire1 =  [\"campfire1\",[2, null]]
var battle3 =    [\"battle3\",[3, null]]
var battle4 =    [\"battle4\",[4, null]]
var campfire2 =  [\"campfire2\",[5, null]]
var battle5 =    [\"battle5\",[6, null]]
var campfire3 =  [\"campfire3\",[7, null]]
var battle6 =    [\"battle6\",[8, null]]
#var root =     [4, null]
'''
var nodes = [
	[\"battle1\",  0, null],
	[\"battle2\",  1, null],
	[\"campfire1\",2, null],
	[\"battle3\",  3, null],
	[\"battle4\",  4, null],
	[\"campfire2\",5, null],
	[\"battle5\",  6, null],
	[\"campfire3\",7, null],
	[\"battle6\",  8, null],
]
enum {START, BATTLE, CAMPFIRE, TREASURE, SMITH, BOSS}

func map_save():
	#map_save will save the completion of the map to a text file
	#opening the file
	var map_save = FileAccess.open(\"user://mapsave.save\",FileAccess.WRITE)
	#var json_string = JSON.stringify(map_data.completion)
	#saving each index of completion as a separate line to the file
	for i in map_data.completion:
		var line = str(i)
		map_save.store_line(line)
	map_save.close() #closing the file
	
	
func map_load():
	#we want to run map_load each time the map opens, so if mapsave.save does not exist
	#we save the default completion state
	if not FileAccess.file_exists(\"user://mapsave.save\"):
		map_save()
	
	#loading data
	var map_save = FileAccess.open(\"user://mapsave.save\", FileAccess.READ)
	
	#for each node, we read a separate line from the file into the respective index in completion
	for i in range(map_data.num_nodes):
		#temp fix
		if map_data.completion.size() > i:   #resource initialization is acting weird
			map_data.completion[i] = int(map_save.get_line())
		else:
			map_data.completion.append(int(map_save.get_line()))
	map_save.close() #close the file
		

func process(id, dest=null):
	nodes[id][2].disabled = true
	map_data.completion[nodes[id][1]] = 1
	nodes[id+1][1].disabled = false
	map_save()
	#get_tree().change_scene_to_file(\"res://battle.tscn\") #switch to battle scene
	if dest == BATTLE:
		get_tree().change_scene_to_file(battle_path) #switch to battle battle_path scene
	
	if dest == CAMPFIRE:
		get_tree().change_scene_to_file(campfire_path)
	
	if dest == SMITH:
		pass
	
	if dest == TREASURE:
		pass
	
	if dest == BOSS:
		pass

func _ready():
	#map_data = map_data_load.new()
	#map_data = ResourceLoader.load(\"user://map/map_resource.tres\")
	map_load()
	print(map_data.completion) #check save state
	var path1 = \"PanelContainer/MarginContainer/VBoxContainer/\"
	var path2 = \"PanelContainer/MarginContainer/quit/VBoxContainer2/\"
	for i in range(nodes.size()):
		var path = \"\"
		if i < 4:
			path = path1
		else:
			path = path2
		nodes[i][2] = get_node(str(path,nodes[i][0])) #get the node from the tree and replace null in nodes[i]
	
	for i in range(nodes.size()):
		if map_data.completion[nodes[i][1]] == 1: #check completion at index in nodes[i]
			nodes[i][2].disabled = true
			
		if i > 0: #if not the starting node
			if map_data.completion[nodes[i-1][1]] == 0: #check completion at prior node
				nodes[i][2].disabled = true
	

func _on_quit_pressed():
	for i in range(map_data.num_nodes):
		map_data.completion[i] = 0 #resetting the save state to the initial one
	map_save()
		#we will likely need a more nuanced reset in the future, but this works for now.
	get_tree().quit() #quits the game rn
	
func _on_battle_1_pressed():
	process(0,BATTLE)

func _on_battle_2_pressed():
	process(1,BATTLE)

func _on_campfire_1_pressed():
	process(2,CAMPFIRE)
	
func _on_battle_3_pressed():
	process(3,BATTLE)

func _on_battle_4_pressed():
	process(4,BATTLE)

func _on_campfire_2_pressed():
	process(5,CAMPFIRE)
	
func _on_battle_5_pressed():
	process(6,BATTLE)

func _on_campfire_3_pressed():
	process(7,CAMPFIRE)

func _on_battle_6_pressed():
	process(8,BATTLE)


"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_ih5t2"]
bg_color = Color(0.886275, 0.878431, 0.796078, 1)

[sub_resource type="PlaneMesh" id="PlaneMesh_iqo7b"]
center_offset = Vector3(0, 0, -10)
orientation = 2

[node name="map" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
script = SubResource("GDScript_72uu4")
map_data = ExtResource("2_xlpbv")
battle_path = "res://battle/battle.tscn"
campfire_path = "res://campfire/campfire.tscn"

[node name="PanelContainer" type="PanelContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_ih5t2")

[node name="MarginContainer" type="MarginContainer" parent="PanelContainer"]
layout_mode = 2
theme_override_constants/margin_left = 10
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 10
theme_override_constants/margin_bottom = 10

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/MarginContainer"]
layout_mode = 2
size_flags_horizontal = 4
alignment = 1

[node name="battle1" type="Button" parent="PanelContainer/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 2
text = "battle"

[node name="VSeparator" type="VSeparator" parent="PanelContainer/MarginContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
size_flags_stretch_ratio = 4.0

[node name="battle2" type="Button" parent="PanelContainer/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_vertical = 6
text = "battle"

[node name="VSeparator2" type="VSeparator" parent="PanelContainer/MarginContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
size_flags_stretch_ratio = 4.0

[node name="campfire1" type="Button" parent="PanelContainer/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_vertical = 6
text = "camp"

[node name="VSeparator3" type="VSeparator" parent="PanelContainer/MarginContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
size_flags_stretch_ratio = 4.0

[node name="battle3" type="Button" parent="PanelContainer/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_vertical = 10
text = "battle"

[node name="quit" type="Button" parent="PanelContainer/MarginContainer"]
layout_mode = 2
size_flags_horizontal = 8
size_flags_vertical = 0
text = "Quit"

[node name="VBoxContainer2" type="VBoxContainer" parent="PanelContainer/MarginContainer/quit"]
layout_mode = 2
offset_left = -205.0
offset_top = 95.0
offset_right = -151.0
offset_bottom = 335.0
size_flags_horizontal = 4
alignment = 1

[node name="battle4" type="Button" parent="PanelContainer/MarginContainer/quit/VBoxContainer2"]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 2
text = "battle"

[node name="VSeparator" type="VSeparator" parent="PanelContainer/MarginContainer/quit/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 3
size_flags_stretch_ratio = 4.0

[node name="campfire2" type="Button" parent="PanelContainer/MarginContainer/quit/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 6
text = "camp"

[node name="VSeparator4" type="VSeparator" parent="PanelContainer/MarginContainer/quit/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 3
size_flags_stretch_ratio = 4.0

[node name="battle5" type="Button" parent="PanelContainer/MarginContainer/quit/VBoxContainer2"]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 2
text = "battle"

[node name="VSeparator3" type="VSeparator" parent="PanelContainer/MarginContainer/quit/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 3
size_flags_stretch_ratio = 4.0

[node name="campfire3" type="Button" parent="PanelContainer/MarginContainer/quit/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 6
text = "camp"

[node name="VSeparator2" type="VSeparator" parent="PanelContainer/MarginContainer/quit/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 3
size_flags_stretch_ratio = 4.0

[node name="battle6" type="Button" parent="PanelContainer/MarginContainer/quit/VBoxContainer2"]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 2
text = "battle"

[node name="Line2D" type="Line2D" parent="PanelContainer/MarginContainer"]
points = PackedVector2Array(346, 45, 388, 100)
width = 1.0
default_color = Color(0.341176, 0.341176, 0.341176, 1)

[node name="MeshInstance2D" type="MeshInstance2D" parent="."]
visible = false
modulate = Color(0.862745, 0.890196, 0.780392, 1)
self_modulate = Color(0.960784, 1, 0.992157, 1)
position = Vector2(320, 180)
scale = Vector2(320, 180)
mesh = SubResource("PlaneMesh_iqo7b")

[node name="Line2D" type="Line2D" parent="."]
visible = false
position = Vector2(-211, 26)
points = PackedVector2Array(512, 22, 514, 47, 514, 77)
width = 5.0
default_color = Color(0.396889, 0.396889, 0.396889, 1)

[node name="Line2D3" type="Line2D" parent="."]
visible = false
position = Vector2(-136.522, 247.049)
scale = Vector2(0.869565, 0.238198)
points = PackedVector2Array(513.5, 19.9896, 514, 47, 514.65, 130.707, 512.35, 267.677)
width = 5.0
default_color = Color(0.396889, 0.396889, 0.396889, 1)

[node name="Line2D2" type="Line2D" parent="."]
visible = false
position = Vector2(-205, 109)
points = PackedVector2Array(512, 22, 514, 47, 515, 115)
width = 5.0
default_color = Color(0.396889, 0.396889, 0.396889, 1)

[connection signal="pressed" from="PanelContainer/MarginContainer/VBoxContainer/battle1" to="." method="_on_start_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/VBoxContainer/battle1" to="." method="_on_battle_1_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/VBoxContainer/battle2" to="." method="_on_battle_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/VBoxContainer/campfire1" to="." method="_on_campfire_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/VBoxContainer/battle3" to="." method="_on_boss_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/quit" to="." method="_on_quit_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/quit" to="." method="_on_boss_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/quit/VBoxContainer2/battle4" to="." method="_on_start_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/quit/VBoxContainer2/battle4" to="." method="_on_battle_4_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/quit/VBoxContainer2/campfire2" to="." method="_on_campfire_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/quit/VBoxContainer2/campfire2" to="." method="_on_campfire_2_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/quit/VBoxContainer2/battle5" to="." method="_on_start_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/quit/VBoxContainer2/campfire3" to="." method="_on_campfire_pressed"]
[connection signal="pressed" from="PanelContainer/MarginContainer/quit/VBoxContainer2/battle6" to="." method="_on_start_pressed"]
